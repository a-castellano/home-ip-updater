image: registry.windmaker.net:5005/a-castellano/limani/base_golang_1_22:202412301859

stages:
  - lint
  - unit_tests
  - integration_tests
  - coverage
  - report
  - sonarqube-check
  - sonarqube-vulnerability-report
  - deploy
  - build

lint_code:
  stage: lint
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/home-ip-updater
    - cd $GOPATH/src/github.com/a-castellano/home-ip-updater
  script:
    - make lint

race_detector:
  stage: unit_tests
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/home-ip-updater
    - cd $GOPATH/src/github.com/a-castellano/home-ip-updater
  script:
    - make race

memory_sanitizer:
  stage: unit_tests
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/home-ip-updater
    - cd $GOPATH/src/github.com/a-castellano/home-ip-updater
  script:
    - make msan

unit_tests:
  stage: unit_tests
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/home-ip-updater
    - cd $GOPATH/src/github.com/a-castellano/home-ip-updater
  script:
    - make test

integration_tests:
  stage: integration_tests
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/home-ip-updater
    - cd $GOPATH/src/github.com/a-castellano/home-ip-updater
  script:
    - make test_integration

coverage:
  stage: coverage
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'
    - if: $CI_COMMIT_BRANCH =~ '/^.*all.*$/'
  services:
    - name: registry.windmaker.net:5005/a-castellano/limani/base_redis_server:202412301859
      alias: redis
    - name: registry.windmaker.net:5005/a-castellano/limani/base_rabbitmq_server:202412301859
      alias: rabbitmq
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/home-ip-updater
    - cd $GOPATH/src/github.com/a-castellano/home-ip-updater
    - export REDIS_IP="172.17.0.2"
  script:
    - make coverage
  coverage: /total:\s+.+\s(\d+\.\d+?)%$/
  artifacts:
    name: "coverage-$CI_PIPELINE_ID"
    paths:
      - cover
    expire_in: 1 hour

code_coverage_report:
  stage: report
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/home-ip-updater
    - cd $GOPATH/src/github.com/a-castellano/home-ip-updater
  script:
    - make coverhtml
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH =~ '/^.*all.*$/'
  dependencies:
    - coverage
  artifacts:
    name: "coverage-$CI_PIPELINE_ID"
    paths:
      - coverage.html
      - cover
    expire_in: 1 hour

sonarqube-check:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:11
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  script:
    - sonar-scanner -Dsonar.host.url="${SONAR_HOST_URL}"
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'
    - if: $CI_COMMIT_BRANCH =~ '/^.*all.*$/'
  dependencies:
    - coverage

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  image:
    name: sonarsource/sonar-scanner-cli:11
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=a-castellano_home-ip-updater_533a7009-26fb-43b9-b6f3-eb5326c083b6&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH == 'develop'
    - if: $CI_COMMIT_BRANCH =~ '/^.*all.*$/'
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - coverage

pages:
  stage: deploy
  image: registry.windmaker.net:5005/a-castellano/limani/base:202412301859
  script:
    - mkdir -p public
    - cp coverage.html public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH =~ '/^.*all.*$/'
  dependencies:
    - code_coverage_report

build_package:
  stage: build
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/home-ip-updater
    - cd $GOPATH/src/github.com/a-castellano/home-ip-updater
  script:
    - make build
    - nfpm package --packager deb
    - mkdir deb_package
    - mv *.deb deb_package/
  dependencies:
    - coverage
  artifacts:
    name: "coverage-$CI_PIPELINE_ID"
    paths:
      - deb_package
    expire_in: 1 hour
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_COMMIT_BRANCH == 'main'
    - if: $CI_COMMIT_BRANCH =~ '/^.*all.*$/'
